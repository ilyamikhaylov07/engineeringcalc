<Window x:Class="calculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:calculator"
        mc:Ignorable="d"
        Title="Calculator" Height="706" Width="1168"
>
    <Grid RenderTransformOrigin="0.5,0.505" HorizontalAlignment="Center" Width="1148" Margin="0,0,0,17" Name="GroupButton">
        <Menu  MinHeight="19"  BorderThickness="0" Margin="0,10,0,-16" Background="White">
            <MenuItem Header="History" Foreground="black" >
                <MenuItem Header="Save" Command = "Save" Margin="0" Foreground="Black" MaxHeight="19">
                    <MenuItem.CommandBindings>
                        <CommandBinding Command="Save" CanExecute="Save_CanExecute" Executed="Save_Executed"/>
                    </MenuItem.CommandBindings>
                </MenuItem>
            </MenuItem>
        </Menu>

        <Button x:Name="button1" Height="83" Width="86"  HorizontalAlignment="Left" VerticalAlignment="Top" Content="1" Margin="420,204,0,0" FontSize="25"
Click="number_Click"   BorderBrush="#FFEAE3C9"    >
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faebb1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#edd46f"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>

        </Button>
        <Button x:Name="button2" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="2" Margin="511,204,0,0" FontSize="25"
Click="number_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faebb1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#edd46f"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="button3" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="3" Margin="601,204,0,0" FontSize="25"
Click="number_Click" BorderBrush="#FFEAE3C9"  >
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faebb1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#edd46f"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="button4" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="4" Margin="420,291,0,0" FontSize="25"
Click="number_Click" BorderBrush="#FFEAE3C9">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faebb1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#edd46f"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="button5" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="5" Margin="511,291,0,0" FontSize="25"
Click="number_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faebb1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#edd46f"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="button6" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="6" Margin="601,291,0,0" FontSize="25"
Click="number_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faebb1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#edd46f"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="button7" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="7" Margin="420,379,0,0" FontSize="25"
Click="number_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faebb1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#edd46f"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="button8" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="8" Margin="511,379,0,0" FontSize="25"
Click="number_Click" BorderBrush="#FFEAE3C9">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faebb1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#edd46f"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="button9" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="9" Margin="601,379,0,0" FontSize="25"
Click="number_Click" BorderBrush="#FFEAE3C9"  >
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faebb1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#edd46f"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Plus" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="+" Margin="703,378,0,0" FontSize="25"
 >
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faaf2d"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#FFFFCB00"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Minus" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="-" Margin="703,291,0,0" FontSize="25" 
 >
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faaf2d"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#FFFFCB00"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Equal" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="=" Margin="704,465,0,0" FontSize="25" 
 >
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faaf2d"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#FFFFCB00"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>

        </Button>
        <Button x:Name="Dev" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="/" Margin="794,379,0,0" FontSize="25" 
 >
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faaf2d"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#FFFFCB00"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Mult" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="*" Margin="794,291,0,0" FontSize="25" 
 >
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faaf2d"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#FFFFCB00"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Clear" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="C" Margin="794,204,0,0" FontSize="25"   >
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faaf2d"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#FFFFCB00"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="button0" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="0" Margin="601,464,0,0" FontSize="25"
Click="number_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faebb1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#edd46f"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <TextBox x:Name="Text" Height="103" Width="830" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="25" Text="" IsReadOnly="True" Foreground="Black"  BorderBrush="#FF0088FF"  SelectionBrush="#FF2E5472" Margin="50,56,0,0" TextChanged="Text_TextChanged" >

        </TextBox>
        <TextBox x:Name="t2" Height="584" Width="350" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="25" Text="" Margin="547,0,0,0" TextWrapping="Wrap"
AcceptsReturn="True"
Visibility="Hidden" />
        <Button x:Name="Tan" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="Tg" Margin="230,204,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Cos" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="Cos" Margin="140,204,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="ArcTg" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="ArcTg" Margin="230,292,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="ArcCos" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="ArcCos" Margin="140,292,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Stepen" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="^" Margin="230,379,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="sqrt" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="√" Margin="140,379,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="ln" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="ln" Margin="230,466,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="lg" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="lg" Margin="140,466,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Sin" Height="83" Width="85" HorizontalAlignment="Left" VerticalAlignment="Top" Content="Sin" Margin="50,204,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="arcSin" Height="82" Width="85" HorizontalAlignment="Left" VerticalAlignment="Top" Content="ArcSin" Margin="50,292,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Exp" Height="82" Width="85" HorizontalAlignment="Left" VerticalAlignment="Top" Content="e" Margin="50,379,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Pi" Height="82" Width="85" HorizontalAlignment="Left" VerticalAlignment="Top" Content="π" Margin="50,466,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Dot" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="." Margin="794,465,0,0" FontSize="25" 
             >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faaf2d"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#FFFFCB00"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>

        </Button>
        <Button x:Name="Negate" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="+/-" Margin="321,205,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Phactorial" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="n!" Margin="321,293,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Module" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="|n|" Margin="321,379,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Left_bracket" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="(" Margin="419,466,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Right_bracket" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content=")" Margin="510,466,0,0" FontSize="25"
             BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Del" Height="83" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="Back" Margin="704,205,0,0" FontSize="25" 
             >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#faaf2d"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#FFFFCB00"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <RadioButton x:Name="RadBT" Content="Rad" HorizontalAlignment="Left" IsChecked="True" Margin="45,173,0,0" VerticalAlignment="Top" GroupName="A" Height="31" Width="103">
            <RadioButton.Template>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border  Margin="8,-8,12,2" BorderThickness="3" Background="#ffffff" CornerRadius="15">
                        <Border.BorderBrush>
                            <SolidColorBrush x:Name="borderBrush"/>
                        </Border.BorderBrush>
                        <ContentPresenter Name="contentElement" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="{TemplateBinding FontWeight}"
                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                          TextElement.FontFamily="{TemplateBinding FontFamily}">
                            <TextElement.Foreground>
                                <SolidColorBrush x:Name="contentColor"/>
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Checked">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Color"
                                                            To="#14a324" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="contentColor" Storyboard.TargetProperty="Color"
                                                            To="#14a324" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unchecked">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Color"
                                                            To="#a6f5b0" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="contentColor" Storyboard.TargetProperty="Color"
                                                            To="#a6f5b0" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                    </Border>
                </ControlTemplate>
            </RadioButton.Template>
        </RadioButton>
        <RadioButton x:Name="DegBT" Content="Deg" HorizontalAlignment="Left" Margin="128,181,0,0" VerticalAlignment="Top" GroupName="A" Height="18" Width="85">
            <RadioButton.Template>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border  Margin="14,-16,-12,-3" BorderThickness="3" Background="#ffffff" CornerRadius="15">
                        <Border.BorderBrush>
                            <SolidColorBrush x:Name="borderBrush"/>
                        </Border.BorderBrush>
                        <ContentPresenter Name="contentElement" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="{TemplateBinding FontWeight}"
                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                          TextElement.FontFamily="{TemplateBinding FontFamily}">
                            <TextElement.Foreground>
                                <SolidColorBrush x:Name="contentColor"/>
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Checked">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Color"
                                                            To="#14a324" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="contentColor" Storyboard.TargetProperty="Color"
                                                            To="#14a324" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unchecked">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Color"
                                                            To="#a6f5b0" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="contentColor" Storyboard.TargetProperty="Color"
                                                            To="#a6f5b0" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                    </Border>
                </ControlTemplate>
            </RadioButton.Template>
        </RadioButton>
        <Button x:Name="Module_Copy" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="|n|" Margin="321,379,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Module_Copy1" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="|n|" Margin="321,379,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Module_Copy2" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="|n|" Margin="321,379,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Module_Copy3" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="|n|" Margin="321,379,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Module_Copy4" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="|n|" Margin="321,379,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Module_Copy5" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="|n|" Margin="321,379,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Module_Copy6" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="|n|" Margin="321,379,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Module_Copy7" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="|n|" Margin="321,379,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Module_Copy8" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="|n|" Margin="321,379,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Module_Copy9" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="|n|" Margin="321,379,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Module_Copy10" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="|n|" Margin="321,379,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Module_Copy11" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="|n|" Margin="321,379,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Module_Copy12" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="|n" Margin="321,379,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Module_Copy13" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="n|" Margin="321,465,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#56abf5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#118dfa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Memplus" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="M+" Margin="230,554,0,0" FontSize="25"
            BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#f7d5d2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#f0b8b4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="lg_Copy" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="MR" Margin="140,554,0,0" FontSize="25"
            BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#f7d5d2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#f0b8b4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Pi_Copy" Height="82" Width="85" HorizontalAlignment="Left" VerticalAlignment="Top" Content="MC" Margin="50,554,0,0" FontSize="25"
            BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#f7d5d2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#f0b8b4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Module_Copy14" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="M-" Margin="321,553,0,0" FontSize="25"
            Click="Module_Click" BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#f7d5d2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#f0b8b4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Left_bracket_Copy" Height="82" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Content="MS" Margin="412,554,0,0" FontSize="25"
            BorderBrush="#FFEAE3C9" >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#f7d5d2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#f0b8b4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <TextBox x:Name="Jor" HorizontalAlignment="Left" Height="526" Margin="902,109,0,0" TextWrapping="Wrap" Text="" Foreground="Black" IsReadOnly="True" VerticalAlignment="Top" Width="236" BorderBrush="#FF0040FF" FontSize="14"/>
        <RadioButton GroupName="B" Content="Журнал" HorizontalAlignment="Left" Height="21" Margin="902,70,0,0" VerticalAlignment="Top" Width="99" IsChecked="True" Click="RadioButton_Click">
            <RadioButton.Template>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border  Margin="14,-16,-12,-3" BorderThickness="3" Background="#ffffff" CornerRadius="15">
                        <Border.BorderBrush>
                            <SolidColorBrush x:Name="borderBrush"/>
                        </Border.BorderBrush>
                        <ContentPresenter Name="contentElement" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="{TemplateBinding FontWeight}"
                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                          TextElement.FontFamily="{TemplateBinding FontFamily}">
                            <TextElement.Foreground>
                                <SolidColorBrush x:Name="contentColor"/>
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Checked">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Color"
                                                            To="#3c69f0" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="contentColor" Storyboard.TargetProperty="Color"
                                                            To="#3c69f0" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unchecked">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Color"
                                                            To="#abbef7" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="contentColor" Storyboard.TargetProperty="Color"
                                                            To="#abbef7" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                    </Border>
                </ControlTemplate>
            </RadioButton.Template>
        </RadioButton>
        <RadioButton GroupName="B" Content="Память" HorizontalAlignment="Left" Height="21" Margin="1020,70,0,0" VerticalAlignment="Top" Width="99" Click="RadioButton_Click_1">
            <RadioButton.Template>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border  Margin="14,-16,-12,-3" BorderThickness="3" Background="#ffffff" CornerRadius="15">
                        <Border.BorderBrush>
                            <SolidColorBrush x:Name="borderBrush"/>
                        </Border.BorderBrush>
                        <ContentPresenter Name="contentElement" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="{TemplateBinding FontWeight}"
                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                          TextElement.FontFamily="{TemplateBinding FontFamily}">
                            <TextElement.Foreground>
                                <SolidColorBrush x:Name="contentColor"/>
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Checked">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Color"
                                                            To="#3c69f0" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="contentColor" Storyboard.TargetProperty="Color"
                                                            To="#3c69f0" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unchecked">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Color"
                                                            To="#abbef7" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="contentColor" Storyboard.TargetProperty="Color"
                                                            To="#abbef7" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                    </Border>
                </ControlTemplate>
            </RadioButton.Template>
        </RadioButton>
        <Button x:Name="JourCL" Height="80" Width="177" HorizontalAlignment="Left" VerticalAlignment="Top" Content="JournalCL" Margin="522,554,0,0" FontSize="25" Click="JourCL_Click"
 >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#f7e5d2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#fccfa2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>

        </Button>
        <Button x:Name="JorC" Click="JorC_Click" Height="80" Width="176" HorizontalAlignment="Left" VerticalAlignment="Top" Content="JounalC" Margin="704,555,0,0" FontSize="25" 
             >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="30"
                        Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#f7e5d2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="#fccfa2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>

        </Button>
        <TextBox x:Name="Mem"  HorizontalAlignment="Left" Margin="902,109,0,0"  Text="" Foreground="Black" IsReadOnly="True" TextWrapping="Wrap" Visibility="Hidden" VerticalAlignment="Top" Width="236" Height="527" BorderBrush="#FF0040FF" FontSize="14"/>

    </Grid>
</Window>